# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
  - cron: "0 0 * * *"  

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
            node-version: 16
            cache: 'npm'
            cache-dependency-path: package-lock.json
  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: 16
            cache: 'npm'
            cache-dependency-path: package-lock.json
      - run: |
          - npm install
          - npm run lint
  test:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: 16
            cache: 'npm'
            cache-dependency-path: package-lock.json
      - run: |
          - npm install 
          - npm run test
  prettier:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: 16
            cache: 'npm'
            cache-dependency-path: package-lock.json
      - run: |
          - npm install
          - npm run prettier
  build:
    runs-on: ubuntu-latest
    needs: [lint,test,prettier]
    steps: 
      - uses: actions/checkout@v3
      - run: |
            npm install
            npm run build
      
  deploy:   
    runs-on: ubuntu-latest
    needs: [build]
    steps: 
      - uses: actions/checkout@v3
      - uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: "Prod deploy v${{ github.ref }}"
          NETLIFY_DEPLOY_TO_PROD: true
    
